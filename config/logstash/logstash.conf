input {
  # 从TCP端口接收JSON格式的日志
  tcp {
    port => 5000
    codec => json
  }
  
  # 从Filebeat接收日志
  beats {
    port => 5044
  }
}

filter {
  # 常见的日志处理
  if [type] == "rustim" {
    # 解析JSON格式的日志
    json {
      source => "message"
    }
    
    # 尝试解析时间戳
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    # 解析用户ID等数据
    if [user_id] {
      mutate {
        add_field => { "[@metadata][user_id]" => "%{user_id}" }
      }
    }
    
    # 为不同的服务添加标签
    if [service_name] {
      mutate {
        add_tag => [ "%{service_name}" ]
      }
    }
  }
  
  # 为包含错误的日志添加标签
  if [level] == "ERROR" or [level] == "error" {
    mutate {
      add_tag => [ "error" ]
    }
  }
  
  # 为包含警告的日志添加标签
  if [level] == "WARN" or [level] == "warn" {
    mutate {
      add_tag => [ "warning" ]
    }
  }
  
  # 解析trace_id和span_id，用于与链路追踪数据关联
  if [trace_id] {
    mutate {
      add_field => { "[@metadata][trace_id]" => "%{trace_id}" }
    }
  }
  
  if [span_id] {
    mutate {
      add_field => { "[@metadata][span_id]" => "%{span_id}" }
    }
  }
}

output {
  # 输出到Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "rustim-%{+YYYY.MM.dd}"
    # 如果有trace_id，创建额外的索引以便于与链路追踪数据关联
    if [@metadata][trace_id] {
      index => "trace-%{+YYYY.MM.dd}"
    }
  }
  
  # 调试输出，可以在生产环境中移除
  stdout {
    codec => rubydebug
  }
} 